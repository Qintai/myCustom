<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QinOpen</name>
    </assembly>
    <members>
        <member name="M:QinOpen.JwtHelper.IssueJwt(QinOpen.TokenModelJwt)">
            <summary>
            颁发JWT字符串
            </summary>
            <param name="tokenModel"></param>
            <returns></returns>
        </member>
        <member name="M:QinOpen.JwtHelper.SerializeJwt(System.String)">
            <summary>
            解析
            </summary>
            <param name="jwtStr"></param>
            <returns></returns>
        </member>
        <member name="T:QinOpen.TokenModelJwt">
            <summary>
            令牌
            </summary>
        </member>
        <member name="P:QinOpen.TokenModelJwt.Uid">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:QinOpen.TokenModelJwt.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:QinOpen.TokenModelJwt.Work">
            <summary>
            职能
            </summary>
        </member>
        <member name="T:QinOpen.Controllers.ProjectUserController">
            <summary>
            用户操作
            </summary>
        </member>
        <member name="M:QinOpen.Controllers.ProjectUserController.#ctor(QinOpen.MessageModel,QinServices.zCustomUserService,QinServices.zCustomUserRolesService)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <param name="userver"></param>
        </member>
        <member name="M:QinOpen.Controllers.ProjectUserController.Login(System.String,System.String)">
            <summary>
            登陆接口
            </summary>
            <param name="name">用户名</param>
            <param name="pwd">密码</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:QinOpen.Controllers.ProjectUserController.GetCustom(QinOpen.ViewModel)" -->
        <member name="M:QinOpen.Controllers.ProjectUserController.GetUserList">
            <summary>
            用户列表--C级权限访问
            </summary>
            <returns></returns>
        </member>
        <member name="T:QinOpen.Filter.MyIValidationMetadataProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:QinOpen.MyRequiredAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:QinOpen.DBInit">
            <summary>
              
            </summary>
        </member>
        <member name="M:QinOpen.DBInit.DbInitialization(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:QinOpen.IApplicationBuilderExtend.ServicesInjection">
            <summary>
            读取Json的配置，自定义Json的配置，json文件内容，通过IOptions，映射成实体
            https://www.cnblogs.com/dotnet261010/p/10172961.html 
            https://www.cnblogs.com/CreateMyself/p/6859076.html
            </summary>
        </member>
        <member name="T:QinOpen.MessageModel">
            <summary>
            通用返回信息类
            </summary>
        </member>
        <member name="P:QinOpen.MessageModel.success">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="P:QinOpen.MessageModel.msg">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:QinOpen.MessageModel.code">
            <summary>
            返回状态码
            </summary>
        </member>
        <member name="P:QinOpen.MessageModel.data">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="T:QinOpen.Startup">
            <summary>
              
            </summary>
        </member>
        <member name="T:Blog.Core.AuthHelper.JwtTokenAuth">
            <summary>
            中间件
            原做为自定义授权中间件
            先做检查 header token的使用
            </summary>
        </member>
        <member name="F:Blog.Core.AuthHelper.JwtTokenAuth._next">
            <summary>
            
            </summary>
        </member>
        <member name="M:Blog.Core.AuthHelper.JwtTokenAuth.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Blog.Core.AuthHelper.JwtTokenAuth.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.AuthHelper.JwtToken">
            <summary>
            JWTToken生成类
            </summary>
        </member>
        <member name="M:Blog.Core.AuthHelper.JwtToken.BuildJwtToken(System.Security.Claims.Claim[],Blog.Core.AuthHelper.PermissionRequirement)">
            <summary>
            获取基于JWT的Token
            </summary>
            <param name="claims">需要在登陆的时候配置</param>
            <param name="permissionRequirement">在startup中定义的参数</param>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.AuthHelper.PermissionItem">
            <summary>
            用户或角色或其他凭据实体,就像是订单详情一样
            之前的名字是 Permission
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionItem.Role">
            <summary>
            用户或角色或其他凭据名称
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionItem.Url">
            <summary>
            请求Url
            </summary>
        </member>
        <member name="T:Blog.Core.AuthHelper.PermissionRequirement">
            <summary>
            必要参数类，类似一个订单信息
            继承 IAuthorizationRequirement，用于设计自定义权限处理器PermissionHandler
            因为AuthorizationHandler 中的泛型参数 TRequirement 必须继承 IAuthorizationRequirement
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.Permissions">
            <summary>
            用户权限集合，一个订单包含了很多详情，
            同理，一个网站的认证发行中，也有很多权限详情(这里是Role和URL的关系)
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.DeniedAction">
            <summary>
            无权限action
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.ClaimType">
            <summary>
            认证授权类型
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.LoginPath">
            <summary>
            请求路径
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.Issuer">
            <summary>
            发行人
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.Audience">
            <summary>
            订阅人
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.Expiration">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.SigningCredentials">
            <summary>
            签名验证
            </summary>
        </member>
        <member name="M:Blog.Core.AuthHelper.PermissionRequirement.#ctor(System.String,System.Collections.Generic.List{Blog.Core.AuthHelper.PermissionItem},System.String,System.String,System.String,Microsoft.IdentityModel.Tokens.SigningCredentials,System.TimeSpan)">
            <summary>
            构造
            </summary>
            <param name="deniedAction">拒约请求的url</param>
            <param name="permissions">权限集合</param>
            <param name="claimType">声明类型</param>
            <param name="issuer">发行人</param>
            <param name="audience">订阅人</param>
            <param name="signingCredentials">签名验证实体</param>
            <param name="expiration">过期时间</param>
        </member>
    </members>
</doc>
